/* Most Abstract */
/* Least Specific */
* {
    font-family: Arial;
}

/* CTRL + K + C  -- Comment*/
/* CTRL + K + U  -- Uncomment*/
/* Type Selector */
p {
    color: violet;
}

/* Class Selector */
.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

/* ID Selector */
/* ID should be Unique and 1 ID = 1 Element!!! */
#paragraph01 {
    font-size: 20px;
}

/* Child Selector */
/* Searches for UL that is directly nested inside a nav element */
nav > ul {
    background-color: skyblue;
}

/* Descendant Selector */
/* Searchs for UL that is nested inside a nav element, nesting level is not important */
nav ul {
    font-weight: bold;
    font-style: italic;
}

/* Adjacent Sibling Selector */
/* Finds h3 and selects the first paragraph, but only if one is directly placed under the h3 */
h3 + p {
    background-color: aqua;
}

/* General Sibling Selector */
/* Find h3 and selects all paragraphs under */
h3 ~ p {
    text-align: center;
}

/* Inheritance */
nav {
    border: 2px solid black;
}

nav > ul, nav > ol {
    border: inherit;
}


/* Bonus Selectors - Combinations */

/* Searches for a paragraph with specific ID */
p#importantDivParagraphID {
    font-weight: bold;
}

/* Searches for a paragraph with specific Class */
p.importantDivParagraphClass {
    background-color: black;
    color: white;
}

/* 
   Searches for a div with specific ID and selects a 
   paragraph with specific class that is directly nested inside  
*/
div#importantDiv > p.importantDivParagraphClass {
    font-size: 20px;
}

/* Selects input with type = password */
input[type="password"] {
    background-color: darkred;
}

/* 
    Selector Specificity
    CSS Cascading most depends on selector specificy value

    *  ===> 0
    Type Selector ===> 1
    Class Selector ===> 10
    ID Selector ===> 100
    !important - Highest priority (Bad Practice)
*/

/* h6 {
    color: blue; 
} */

.ruleCascadeExample{
    color: blue;
}

/* h6 {
    color: brown;
} */

#ruleCascadeExampleId{
    color: brown;
}

h6 {
    color: blueviolet !important;
}